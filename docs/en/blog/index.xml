<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nishinohi</title>
    <link>https://nishinohi.github.io/en/blog/</link>
    <description>Recent content on nishinohi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nishinohi.github.io/en/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MATAGEEK</title>
      <link>https://nishinohi.github.io/en/blog/matageek/</link>
      <pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/matageek/</guid>
      <description>What is MATAGEEK?  In a nutshell, it is a detection and notification system for hunting traps using BLE mesh network.
Trap hunting is a tough job  Hunting is often associated with hunting rifles, but trap hunting is also an important method. However, in principle, the traps that have been set need to be patrolled every day.1 (To prevent non-hunting birds and animals from being caught, to prevent wounded animals from being created, etc.</description>
    </item>
    
    <item>
      <title>Disassembly Fusion</title>
      <link>https://nishinohi.github.io/en/blog/kaitaiyugou/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/kaitaiyugou/</guid>
      <description>Concept The more family members you have, the more rooms you need, and the larger the space you need. However, as the family structure changes, the size required for a house will eventually decrease. How will the house be able to cope with this change? A child&amp;rsquo;s room that is no longer used, a slightly larger living room, an extra bedroom. By opening them up to the outside, the interior area of the house is reduced and the exterior space is expanded.</description>
    </item>
    
    <item>
      <title>Graduation work</title>
      <link>https://nishinohi.github.io/en/blog/graduation-work/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/graduation-work/</guid>
      <description></description>
    </item>
    
    <item>
      <title>House for potter</title>
      <link>https://nishinohi.github.io/en/blog/house-for-potter/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/house-for-potter/</guid>
      <description>Concept It is not a residence for convenience or functionality, but a residence for living as a potter.</description>
    </item>
    
    <item>
      <title>Live small, Open wide</title>
      <link>https://nishinohi.github.io/en/blog/live-small-open-wide/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/live-small-open-wide/</guid>
      <description>Concept The windows are designed not for the convenience of the occupants or the interior space, but for the pedestrians who view the urban landscape. Residents will be able to direct their living space as part of the urban landscape by adapting to the continuously transforming louvers.
In the compact city of Minamihorie, a new urban landscape may be created when the facade of a building with a historical background is not lost, but is made into a facade for pedestrians.</description>
    </item>
    
    <item>
      <title>Nakanoshima Islandization</title>
      <link>https://nishinohi.github.io/en/blog/nakanoshima-islandization/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/nakanoshima-islandization/</guid>
      <description>Concept Surrounded by water and located in Osaka, Nakanoshima was a key part of the water city of Osaka, a center of trade using water transportation, and the birthplace of culture. However, with the construction of large bridges and highways, and the spread of subways, Nakanoshima has lost its context as an island, and is now perceived as just another piece of land.
This museum is a plan to &amp;ldquo;islandify&amp;rdquo; Nakanoshima as a cradle of culture.</description>
    </item>
    
    <item>
      <title>Renovation of a bakery</title>
      <link>https://nishinohi.github.io/en/blog/sin-taro-pan/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/sin-taro-pan/</guid>
      <description>In 2013 (second year of graduate school), I was in charge of the renovation of a bakery called Taro Pan located at Hankyu Ishibashi Station (budget: 3 million yen). With the help of a local construction company, I was able to be deeply involved in the planning, design, and construction, and the project was completed without going over schedule. The walls are all plastered with the help of a friend. The fixtures, tables and chairs for the eat-in space were all made by hand in cooperation with a local welder.</description>
    </item>
    
    <item>
      <title>コンパクトなGatewayを作る</title>
      <link>https://nishinohi.github.io/en/blog/compact-gateway/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/compact-gateway/</guid>
      <description>何を作ったのか  以前に作成した3G通信モジュールを参考に、マイコンとLTEモジュールを組合わせたコンパクトなGatewayを作成しました。
OSH  参考にする製品 まずはOSHから回路図をもらってきます。今回はSORACOM認定デバイスでもありSeeedから提供されている Wio LTEの回路図 を参考にします。Wio LTEで実装されているLTE用のEC21の仕様書の参考回路図などから自分で回路を組んでもいいのですが、最終的にPCBAをSeeedに発注する場合Seeedが提供している部品リストを利用したほうが安価で納品も速いです。なお、後述しますが最終的に今回は技適対応済みのEC25-Jを実装することになりました。
回路図を見る 前回と同様に通信以外の不要な回路を削除します。Wio LTEにはSTM32F4というマイコンが搭載されていますが、今回はWiFi機能もつけたかったためマイコン部分を ESP32 に置き換えます。また、Wio LTEは3層実装でしたが部品点数を減らせば2層に収まりそうだったので2層で実装にします。
改修作業  改修内容 以下が今回の改修を行った回路図と配線図です。通信機能のみが必要なので上図の回路図よりかなり部品点数が減りました。マイコンもESP32に交換済みです。WiFi用のアンテナが干渉されないように基盤の外にでるように配置しましたが、電波関係の知識は全く無いのでどのような配置がアンテナにとってよい配置なのかはわかっていません。
完成品 とりあえず届いた完成品を見てみます。いかにも無理やりつけた配線が飛び出していますが、これは私がLTEモジュールの起動用のPINを少しいじる必要があったので付け足しました。
トラブル どうもSeeedが提供していたSIMカードホルダーのEagle用のライブラリに不備があったようでそのまま配線するとSIMを正しく読み取れませんでした。なので一度SIMカードホルダーを半田を溶かして無理やり引き剥がし配線をやり直しました。見た目が残念なことになりましたがこれで正しく動作したので一安心です。ちなみにSeeed側からは謝罪を兼ねてSeeed内で使用できるクーポン券が送られてきました。
EC25-Jは特別な入手経路  実は今回LTE用のモジュールとして実装しているEC25-Jですが、本来技適マークが印字されているものは個人では注文できません。Seeed主催の勉強会で登壇した際に知り合ったSeeedのエンジニア兼マーケティング担当の方に相談したところ、EC25-Jなら実装できるように手配すると言われ今回このモジュールが完成しました。本当にありがとうございました、この場を借りてお礼申し上げます。</description>
    </item>
    
    <item>
      <title>コンパクトな3G通信モジュールを作る</title>
      <link>https://nishinohi.github.io/en/blog/compact-3g-module/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nishinohi.github.io/en/blog/compact-3g-module/</guid>
      <description>何を作ったのか  GPS機能付きの3G通信モジュールです。HWの設計に関する知識を持ち合わせていないので0からHWを設計したわけではなく、OSHで提供されている多機能な3Gモジュールを改修してコンパクトなモジュールを再設計・製造したという話です。
なぜ作ったのか  これを作った当時（2016年くらい）、携帯電波網を利用できる比較的安いArduino向けのモジュールがありませんでした。当時はマイコンによる3G通信で安価なホビー向けの環境はRaspberry Pi ZERO + 3Gドングル + SORACOM SIMの選択肢が一般的でした。そんな中「USBドングルでかい、Raspberry Pi ZERO意外とでかい、電源リソース苦しい、Arduino使いたい」という私の我儘を叶えられるモジュールはないかと奔走しましたが、そんな願ったり叶ったりなモノは見つからなかったため自作することにしました。
OSH（オープンソースハードウェア） Adafruitとの出会い 安い3Gモジュールが無いかとネットの海を彷徨っていると、OSH（OpenSourceHardware）で有名なAdafruit Industriesの Adafruit FONA 3G Cellular （以下Fona）という比較的安価（$79.95）なモジュールに出会いました。Arduinoで利用するためのライブラリも提供されています。いたれりつくせりです。しかし技適という壁が立ちはだかり、購入しても日本では使えません。 モジュール部分を技適対応すればよいのでは？ Fonaには3G通信用のモジュールにSIM5320が使用されていますが、特定のアンテナとセットで技適が取得されているSIM5320Jという日本向けのモジュールがありました。モジュールをこれに置き換えて自分で作成してしまえば日本で使用することが可能です。そしてAdafruitの製品は全てOSH。全ての回路図が Eagle のデータ形式で公開されています。
改修内容 AdafruitのモジュールはSIM5320の様々な機能を利用するために多くの部品が実装されていますが、通信するだけであれば部品点数を減らせそうだったため以下のような回路に修正することにしました。
 電話機能用のスピーカー回路削除 イヤホンジャック削除 バッテリーは電池駆動を想定したのでリチウム電池用の充放電管理回路を削除  回路図に立ち向かう 自分の電気回路の知識レベル 電子工作の知識は全てインターネットとYouTuberから得ましたがそれでも何とかなったので、以降の話も特に電気回路の知識がなくても理解できると思います。
OSH Adafruitに感謝しながら以下のリポジトリをクローンしましょう。ちなみに fritzing用のライブラリ も公開しているようです（fritzing形式のFONAの回路図はありません）。
  FONA回路図（Eagle）   FONAライブラリ   回路図をみる  Eagle をインストールしていない場合、まずインストールしましょう。思った以上に複雑でないことが分かると思います。それぞれの機能毎に回路図を分けて記述してあるので読みやすいですね。配線図は一見複雑なように見えますが、実際の配線は回路図からある程度Eagleの機能で自動生成できます。
不要な回路を削る 前編で触れましたが、3G通信以外の機能が不要であれば以下の回路は不要なので今回は削除します。
 電話機能用のスピーカー イヤホンジャック バッテリーは電池駆動を想定したのでリチウム電池用の充放電管理回路  また、FONA自体はArduinoでの利用を想定しているためSIM5320からの3.3V信号をレベルシフター（回路図の「LEVEL SHIFTING」の箇所の三角形の部品）で5V信号に変換しています。しかし、私はESP8266での利用を想定しており、3.3V信号がそのまま利用できるのでレベルシフターも不要です。よって、回路図の以下のものは不要になります。
 3.5MM HEADPHONE/MIC LEVEL SHIFTING LIPO CHARGER AUDIO FILTERING  それらを削除した後の回路図、配線図は以下のようになります。グッとシンプルかつ簡単になりましたね。アンテナのコネクタを小さくしたかったので、3G通信アンテナ用のコネクタをSMAからUFLに変更しましたがこれはどっちでもいいです（変換コネクタもあるので）。</description>
    </item>
    
  </channel>
</rss>
